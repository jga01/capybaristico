spring.application.name=capycards

# PostgreSQL Datasource Configuration
spring.datasource.url=jdbc:postgresql://localhost:5432/capycards_db
spring.datasource.username=capycards_user
# The password is now read from an environment variable named DB_PASSWORD
# See the "Actions" section for how to set this variable to run the application.
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA/Hibernate Configuration (Spring Data JPA will use these)
spring.jpa.hibernate.ddl-auto=update
                                    # 'update': Spring tries to update the schema based on your entities.
                                    # 'validate': Validates the schema, does not make changes.
                                    # 'create': Drops and recreates the schema on startup (good for dev, wipes data).
                                    # 'create-drop': Creates schema on startup, drops on shutdown.
                                    # 'none': Does nothing to the schema (use if managing schema with Flyway/Liquibase).
                                    # For now, 'update' is fine for development.
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.open-in-view=false

# Socket.IO Server Configuration
socket-server.host=0.0.0.0
socket-server.port=9092

server.address=0.0.0.0

# Frontend Origin for CORS
frontend.origin=${FRONTEND_ORIGIN}